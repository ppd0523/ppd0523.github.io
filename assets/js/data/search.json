[ { "title": "DJANGO ORM 중복 제거하기", "url": "/posts/django-orm-remove-duplicates/", "categories": "web, backend", "tags": "django, ORM, query, data, duplicate, remove, delete", "date": "2021-08-11 06:00:00 +0900", "snippet": "장고에서 중복 데이터를 삭제하는 방법 distinct() : 고유한 쿼리셋 반환 values_list(field1, field2, ...) : 필드만 포함하는 쿼리셋 반환 filter(field1=value1, field2=value2, ...)# create_date가 고유한 queryset 얻기dates = Price.objects.values_list(&#39;create_date&#39;, flat=True).distinct()for date in dates: # 중복을 제거할 정보 획득 codes = ..." }, { "title": "Grafana, Kibana, DIY", "url": "/posts/%ED%82%A4%EB%B0%94%EB%82%98-%EA%B7%B8%EB%9D%BC%ED%8C%8C%EB%82%98/", "categories": "data, visualization", "tags": "data, dashboard, kibana, elasticsearch, grafana, prometheus", "date": "2021-08-04 21:30:00 +0900", "snippet": "데이터 시각화를 위해 자료를 찾다보면 꼭 등장하는 것이 두 프레임워크 Kibana(이하 키바나)와 Grafana(이하 그라파나)다. 다른 분야의 개발자들과 얘기하다보면 가끔 등장하는 놈들이라 낯설지 않았는데, 드디어 내 앞에 나타났다. 쓸일 없을 때는 몇 번 읽어봐도 잘 몰랐는데 써야할 일이 생기니까 알게되더라. 어떤놈을 쓰는 것이 내 시각화 작업(주식가격 정보 분석)에 도움이 될지 고려하며 연구해봤다. 역시 백문이 불여일코.Kibana Grafana 쓰면 이런걸 할 수 있다더라. 와우 출처: 파인리포트출처: https://e..." }, { "title": "D3.js data(), enter(), exit() 이해", "url": "/posts/D3-data-enter-exit-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0/", "categories": "web, front-end", "tags": "javascript, js, es6, d3, d3.js, data, visualization", "date": "2021-07-26 04:00:00 +0900", "snippet": "D3.js를 처음 쓰면 정말 쉽게 데이터를 다룰 수 있다는 것에 놀라고, 조금 더 쓰다보면 생각대로 쓰기 너무 어렵다는 것에 놀란다. 잘 쓰다가 움직이는 차트 만들려니 이렇게 어려운 함수였나 싶어 시행착오를 기록한다. 이 포스팅을 찾아 들어온 사람은 d3.js에 대한 기본적인 이해가 있을 것이라 가정한다.용어 정의 엘리먼트: DOM을 구성하는 태그 노드: d3 셀렉션이 선택한 객체. 엘리먼트와 데이터로 구성되어 있다.데이터 업데이트 함수 data enter exit/*** @param data 맵핑할 배열 데이터* ..." }, { "title": "ES6 점 vs 괄호 표기법(Bracket vs Dot notation)", "url": "/posts/Dot-notation-bracket-notation/", "categories": "language, grammer", "tags": "javascript, es6", "date": "2021-07-22 00:57:00 +0900", "snippet": "자바스크립트는 객체의 속성을 추가하는 방법으로 두 가지 점 표기법(dot)과 괄호 표기법(bracket) 두 가지가 있다. 두 방법 다 다른 언어에서 접해봤기 때문에 적당히 이해하면서 쓰고 있다가, 문득 차이가 궁금해 알아보고 글을 남긴다.V8 엔진을 기준으로 합니다결론. 두 표기법의 차이는 점 표기법은 점 뒤에 오는 변수명(속성명)으로 호출한다. 괄호 표기법은 괄호 안의 값으로 변수명(속성명)을 호출한다.표기법을 구분하기 전에 속성의 종류를 알아야한다. 무슨 말인지 모르겠다면 아래 예시를 읽어보자.1. 속성명은 변수명으로..." }, { "title": "리눅스 계정 비밀번호 초기화", "url": "/posts/%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B3%84%EC%A0%95-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EC%B4%88%EA%B8%B0%ED%99%94/", "categories": "linux, util", "tags": "linux, passwd, password, user, reset, shell", "date": "2021-07-14 02:00:00 +0900", "snippet": "리눅스 계정 비밀번호를 잊어버렸을 경우…비밀번호를 찾을 수는 없지만 비밀번호를 초기화하고 다시 설정할 수는 있다.계정이 삭제되는 것이 아님.# root 계정으로 접속$ passwd -d &amp;lt;user&amp;gt;New password: " }, { "title": "자바스크립트 날짜 다루기", "url": "/posts/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%82%A0%EC%A7%9C-%EB%8B%A4%EB%A3%A8%EA%B8%B0/", "categories": "web, front-end", "tags": "date, javascript, es6, moment.js, d3.js, danfo.js", "date": "2021-06-03 18:00:00 +0900", "snippet": "날짜 데이터를 다루면서 일자, 주, 월, 연, 요일 등의 다양한 기준으로 통계 내는 일을 해야했다. 파이썬에서는 pandas라는 좋은 모듈이 있지만 자바스크립트에서는 어떤 방법으로 구현할지 고민하면서 몇 가지 방법을 정리해봤다.시간 계산을 지원하는 자바스크립트 모듈 d3.js moment.js danfo.js" }, { "title": "터미널을 간지나게 써보자", "url": "/posts/%ED%84%B0%EB%AF%B8%EB%84%90%EC%9D%84-%EA%B0%84%EC%A7%80%EB%82%98%EA%B2%8C-%EC%8D%A8%EB%B3%B4%EC%9E%90/", "categories": "linux, util", "tags": "linux, tool, shell, zsh, oh-my-zsh, plugin, tty", "date": "2021-06-03 18:00:00 +0900", "snippet": "리눅스 터미널에서 기본 쉘 Bourne Shell(sh)만 사용하던 나에게 신문물을 알려준 분이 있다. 그 분의 터미널은 썸네일에 있는 스크린 보다 멋있었다. 얼마나 많은 단축키를 쓰는지 적은 타이핑으로도 화면이 휙휙 바뀌어서 간지 그 자체였다. 간지를 나도 따라하고자 그때부터 조금씩 테마와 플러그인 이것저것을 써보면서 경험한 것을 정리한 글이다. 이 글을 참고해서 간지나는 개발자되기를 바란다.bash? zsh?비교적 최신 버전의 bash과 zsh을 날 것으로 써보면 차이를 느낄 수 없다. 어떤 차이가 있냐하면 zsh은 테마를..." }, { "title": "C/C++ 포인터의 const 쉽게 이해하기", "url": "/posts/%ED%8F%AC%EC%9D%B8%ED%84%B0%EC%9D%98-const-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0/", "categories": "language, programming", "tags": "cpp", "date": "2018-03-12 18:00:00 +0900", "snippet": "변수를 선언할 때 const를 붙이면 그 변수를 상수로 만드는 효과가 있다. const의 위치에 따라 다른 역할을 하는데, 규칙은 간단하다. 오른쪽에 있는 부분을 상수화 한다const int num = 10;int* const p = &amp;amp;num;변수 num, p은 상수화 되어 다른 값으로 변경할 수 없다.Rule: const 오른쪽에 있는 부분을 상수화 한다.싱글 포인터 변수에서 const가 올 수 있는 위치_ int _ * _ p = &amp;amp;a;// _ 부분에 const가 들어갈 수 있다. 아래처럼 중복..." }, { "title": "CMake built-in 변수 확인하기", "url": "/posts/CMake-built-in-%EB%B3%80%EC%88%98-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/", "categories": "language, util", "tags": "cmake, build, cpp", "date": "2018-03-04 18:00:00 +0900", "snippet": "CMake 내장 변수를 활용하면 소스코드의 파일 경로를 바꿀 때마다 파일 경로를 수정할 필요가 없다. 그래서 내장 변수를 써야한다. 무슨 내장 변수가 있는지 알아야하지 않겠는가?일단 무슨 변수가 있는지 전부 출력해보고 확인해보자.# CMakeLists.txtforeach (_variableName VARIABLES) message(STATUS &quot;${_variableName}=${ ${_variableName} }&quot;)endforeach()CMakeLists.txt 파일을 만들고 cmake . 명령을 실행..." }, { "title": "리눅스에서 키보드 이벤트 처리하기", "url": "/posts/%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%ED%82%A4%EB%B3%B4%EB%93%9C-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0/", "categories": "linux, programming", "tags": "linux, event, cpp, keyboard", "date": "2018-02-26 18:00:00 +0900", "snippet": "리눅스에서 키보드 이벤트는 하드웨어 인터럽트를 사용한다. 윈래는 입력만 처리하는 스레드를 만들어서 spin lock으로 키보드 입력을 인식하려 했다. 근데 입력 스레드에서 키보드 입력을 blocking 하게 대기하는 방법을 찾다보니, 결국 입력 이벤트를 대기하는 것과 같은 이야기였다.#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;linux/input.h&amp;gt;#include &amp;lt;termios.h&amp;gt;#include &amp;lt;fcntl.h&amp;gt;#i..." }, { "title": "바이트 단위로 변수 값 파싱하기", "url": "/posts/%EB%B0%94%EC%9D%B4%ED%8A%B8-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EB%B3%80%EC%88%98-%EA%B0%92-%ED%8C%8C%EC%8B%B1%ED%95%98%EA%B8%B0/", "categories": "language, grammer", "tags": "cpp, parsing", "date": "2018-02-18 18:00:00 +0900", "snippet": "MCU, MPU를 사용할 때 통신 패킷을 이용해 byte 단위로 붙였다 장난치는 경우가 많다. 보통 2byte 짜리 센서값을 통신으로 1byte 씩 받을 경우 비트쉬프트(bit shift) 해서 하위비트 상위비트 따로 처리한다.예시)센서로 부터 1byte씩 얻은 데이터가 data에 저장되었다고 가정data 변수에서 distance 변수 값과 pulse 변수 값을 구한다.// Raw datauint8_t data[] = {0x11, 0x22, 0x33};// filted datauint16_t distance = 0x2211;..." }, { "title": "vim에서 줄바꿈(Line Feed) 치환하기", "url": "/posts/vim%EC%97%90%EC%84%9C-%EC%A4%84%EB%B0%94%EA%BF%88(Line-Feed)-%EC%B9%98%ED%99%98%ED%95%98%EA%B8%B0/", "categories": "linux, util", "tags": "vi, vim, editor, replace", "date": "2018-02-11 18:00:00 +0900", "snippet": "vim 문자열 치환. before를 after로 치환한다.:%s/before/after/gvim에서 문자열을 줄바꿈 문자로 치환할 때 \\n로 대체하면 ^@ 따위로 바뀌고 실제로 줄바꿈이 되지 않는다.\\n 대신 \\r로 하면 줄바꿈 된다.:%s/\\n/\\r/g%s는 문서 처음, g는 문서 끝을 의미한다. 문서 처음부터 끝까지 문자열을 치환하라는 의미" } ]
